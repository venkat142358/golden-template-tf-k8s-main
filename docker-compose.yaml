version: "3"
services:
  strapi-nginx:
    container_name: nginx
    # image: $DOCKER_USERNAME/
    ports:
      - '8080:80'
    environment:
      BASE_URL: http://localhost:1337
    depends_on:
      - strapi
    networks:
      - strapi
  strapi:
    container_name: strapi
    # image: strapi/strapi
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    # volumes:
      # - ./config:/opt/app/config
      # - ./src:/opt/app/src
      # - ./package.json:/opt/package.json
      # - ./yarn.lock:/opt/yarn.lock
      # - ./.env:/opt/app/.env
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    image: postgres:12.0-alpine
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - strapi

  meilisearch:
    image: getmeili/meilisearch:$MEILI_VERSION
    container_name: meilisearch
    env_file: .env
    environment:
      - MEILE_MASTER_KEY=$MASTER_KEY
    ports:
      - "$MEILI_PORT:$MEILI_PORT"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge